function model = forward(c, varargin)
  options = Options(varargin{:});

  switch lower(options.model)
  case 'observed'
    timeIndex = c.observations.timeIndex;
    dieCount  = c.observations.dieCount;
    Zmap      = c.process.model.constrainMapping(c.observations.dieIndex);
  case 'complete'
    timeIndex = [];
    dieCount  = c.system.wafer.dieCount;
    Zmap      = c.process.model.mapping;
  otherwise
    assert(false);
  end

  model = HotSpot.Forward( ...
    'floorplan', c.system.floorplan, ...
    'config',    c.temperature.configuration, ...
    'line',      c.temperature.line, ...
    'Pdyn',      c.power.Pdyn, ...
    'timeIndex', timeIndex, ...
    'leakage',   c.leakage.model, ...
    'Zmap',      Zmap, ...
    'Lnom',      c.process.Lnom, ...
    'Ldev',      c.process.Ldev, ...
    'dieCount',  dieCount);
end
